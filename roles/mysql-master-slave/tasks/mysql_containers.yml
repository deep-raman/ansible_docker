---

- name: Create mysql network
  docker_network:
    name: "{{ network_name }}"

- name: Create master data directory 
  file:
    path: "{{ docker_volume_default_path }}/{{ item }}"
    state: directory
  with_items:
    - mysql_master_data
    - mysql_slave_data
  become: yes

- name: Create conf directory 
  file:
    path: "{{ docker_volume_default_path }}/mysql_conf"
    state: directory

- name: Create mysql master config file
  file:
    path: "{{ docker_volume_default_path }}/mysql_conf/master.cnf"
    state: touch
  become: yes

- name: Create mysql slave config file
  file:
    path: "{{ docker_volume_default_path }}/mysql_conf/slave{{ item }}.cnf"
    state: touch
  with_sequence: count="{{ slave_instances }}"
  become: yes

- name: Personalize master configuration
  blockinfile:
    dest: "{{ docker_volume_default_path }}/mysql_conf/master.cnf"
    state: present
    backup: yes
    block: |
      {{ master_config }}
  become: yes

- name: Personalize slave configuration
  blockinfile:
    dest: "{{ docker_volume_default_path }}/mysql_conf/slave{{ item }}.cnf"
    state: present
    backup: yes
    block: |
      {{ slave_config }} 
  with_sequence: count="{{ slave_instances }}"
  become: yes
  
- name: Create mysql master container
  docker_container:
    name: "{{ master_name}}"
    image: "{{ mysql_image }}"
    state: started
    restart_policy: always
    exposed_ports: "{{ mysql_port }}"
    published_ports:
      - "{{ mysql_port }}:{{ mysql_port }}"
    volumes:
      - "{{ docker_volume_default_path }}/mysql_master_data:/var/lib/mysql"
      - "{{ docker_volume_default_path }}/mysql_conf/master.cnf:/etc/mysql/conf.d/mysql.conf.cnf"
    networks: 
      - name: "{{ network_name }}"
    env: MYSQL_ROOT_PASSWORD={{ mysql_root_pass }},
      MYSQL_USER={{ mysql_user }},
      MYSQL_PASSWORD=:{{ mysql_pass }},
      MYSQL_DATABASE={{ mysql_db }},
      MYSQL_AUTHENTICATION_PLUGIN=mysql_native_password

- name: Create mysql slave container
  docker_container:
    name: "{{ slave_name }}{{ item }}"
    image: "{{ mysql_image }}"
    state: started
    restart_policy: always
    exposed_ports: "{{ mysql_port }}"
    published_ports:
      - "3307:{{ mysql_port }}"
    volumes:
      - "{{ docker_volume_default_path }}/mysql_slave_data:/var/lib/mysql"
      - "{{ docker_volume_default_path }}/mysql_conf/slave{{ item }}.cnf:/etc/mysql/conf.d/mysql.conf.cnf"
    networks: 
      - name: "{{ network_name }}"
    env: MYSQL_REPLICATION_USER={{ replication_user }},
      MYSQL_REPLICATION_PASSWORD={{ replication_pass }},
      MYSQL_ROOT_PASSWORD={{ mysql_root_pass }},
      MYSQL_DATABASE={{ mysql_db }},
      MYSQL_AUTHENTICATION_PLUGIN=mysql_native_password
  with_sequence: count="{{ slave_instances }}"
  tags:
    - slave

