- name: Create docker volume base path
  file:
    path: "{{ docker_volume_path }}"
    state: directory
  become: yes  

- set_fact:
    #redis_data_dirs: []
    #redis_config_dirs: []
    docker_vol_path: []
    docker_vol_path_full: []
  
#- set_fact:
#    redis_data_dirs: "{{ redis_data_dirs }} + [ '{{ item }}' ]"
#  with_sequence: count="{{ redis_instances }}" format={{ docker_volume_path }}/redis_data%01x  # this works

#- set_fact:
#    redis_config_dirs: "{{ redis_config_dirs }} + [ '{{ item }}' ]"
#  with_sequence: count="{{ redis_instances }}" format={{ docker_volume_path }}/redis_config%01x  # this works

- set_fact:
    docker_vol_path: "{{ docker_vol_path }} + [ 'redis_data{{ item }}' ]"
  with_sequence: count="{{ redis_instances }}"  

- set_fact:
    docker_vol_path_full: "{{ docker_vol_path_full }} + [ '{{ item }}' ]"
  with_sequence: count="{{ redis_instances }}" format={{ docker_volume_default_path }}/redis_data%01x  # this works

#- debug: var=redis_data_dirs

#- debug: var=redis_config_dirs

- debug: var=docker_vol_path

- debug: var=docker_vol_path_full

#- meta: end_play

- name: Create redis data volumes
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "{{ docker_vol_path_full }}"
  become: yes 

- name: Create redis config file
  file:
    path: "{{ item }}/redis.conf"
    state: touch
  delegate_to: 127.0.0.1
  become: yes
  with_items:
    - "{{ docker_vol_path_full }}"

- name: Personalize redis configuration
  blockinfile:
    dest: "{{ item }}/redis.conf"
    state: present
    backup: yes
    block: |
      port 6379
      cluster-enabled yes
      cluster-config-file nodes.conf
      cluster-node-timeout 5000
      appendonly yes
  delegate_to: 127.0.0.1
  become: yes
  with_items:
    - "{{ docker_vol_path_full }}"

- name: Create docker volumes
  docker_volume:
    name: "{{ item }}"
  with_items:
    - "{{ docker_vol_path }}"

- name: Create a network
  docker_network:
    name: redis_network

- name: Create a redis container
  docker_container:
    name: "redis{{ item }}"
    image: redis
    command: redis-server /usr/local/etc/redis/redis.conf --appendonly yes
    state: started
    restart_policy: always
    exposed_ports: 6379
    published_ports:
      - "6379{{ item }}:6379"
    volumes:
      - "{{ docker_volume_default_path }}/redis_data{{ item }}:/data"
      - "{{ docker_volume_default_path }}/redis_data{{ item }}/redis.conf:/usr/local/etc/redis/redis.conf"
    networks: 
      - name: redis_network
  with_sequence: count="{{ redis_instances }}"
  tags: remove_cluster

#- set_fact:
#    containers_ips: []

- name: Get containers ip
  shell: "docker inspect --format '{''{ .NetworkSettings.IPAddress }''}' redis{{ item }}"
  with_sequence: count="{{ redis_instances }}"
  register: containers_ips
  tags: get_ips 
  
- set_fact:
    container_ips: []
  tags: get_ips

- set_fact:
    container_ips: "{{ container_ips + item.stdout_lines }}"
  with_items: "{{ containers_ips.results }}"
  tags: get_ips
  no_log: true
  
- debug: var=container_ips
  tags: get_ips

#  with_sequence: count="{{ redis_instances }}"
#  tags: get_ips

- set_fact:
    my_joined_list: "{{ container_ips | join(':6379 ') }}"
  tags: get_ips

- debug: var=my_joined_list
  tags: get_ips

#- meta: end_play
  
- name: Create cluster
  shell: "echo \"yes\" | docker exec redis1 redis-cli --cluster create {{ my_joined_list }}:6379 --cluster-replicas 1 --cluster-yes"
  run_once: true
  #when: not cluster_setup_done
  tags:
    - cluster
    - get_ips
